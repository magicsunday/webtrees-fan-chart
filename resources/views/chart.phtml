<?php

/**
 * This file is part of the package magicsunday/webtrees-fan-chart.
 *
 * For the full copyright and license information, please read the
 * LICENSE file that was distributed with this source code.
 */

declare(strict_types=1);

use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Individual;
use Fisharebest\Webtrees\Tree;
use Fisharebest\Webtrees\View;
use MagicSunday\Webtrees\FanChart\Configuration;

/** @var Configuration $configuration */
/** @var string $title */
/** @var string $moduleName */
/** @var Individual $individual */
/** @var Tree $tree */
/** @var array $chartParams */
/** @var string $javascript */
/** @var string $stylesheet */
/** @var string $svgStylesheet */
/** @var string $ajaxUrl */
?>

<div id="page-fan">
    <h2 class="wt-page-title"><?= $title ?></h2>

    <form id="webtrees-fan-chart-form" method="post" class="wt-page-options wt-page-options-fan-chart d-print-none">
        <?= csrf_field() ?>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label wt-page-options-label" for="xref">
                <?= I18N::translate('Individual') ?>
            </label>
            <div class="col-sm-9 wt-page-options-value">
                <?=
                    view('components/select-individual', [
                        'id'         => 'xref',
                        'name'       => 'xref',
                        'individual' => $individual,
                        'tree'       => $tree,
                        'required'   => true,
                    ])
                ?>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label wt-page-options-label" for="fanDegree">
                <?= I18N::translate('Fan size') ?>
            </label>
            <div class="col-sm-9 wt-page-options-value d-flex justify-content-between">
                <input id="fanDegree" name="fanDegree" class="flex-grow-1 custom-range" type="range" value="<?= $configuration->getFanDegree() ?>" min="180" max="360" step="5">
                <output id="fanDegreeOutput" name="fanDegreeOutput" class="custom-range-value wt-page-options-label"><?= $configuration->getFanDegree() ?>Â°</output>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label wt-page-options-label" for="generations">
                <?= I18N::translate('Generations') ?>
            </label>
            <div class="col-sm-9 wt-page-options-value">
                <?=
                    view('components/select', [
                        'id'       => 'generations',
                        'name'     => 'generations',
                        'selected' => $configuration->getGenerations(),
                        'options'  => $configuration->getGenerationsList(),
                        'class'    => 'form-control-sm',
                    ])
                ?>
            </div>
        </div>

        <div class="collapse" id="showMoreOptions">
            <div class="form-group row">
                <label class="col-form-label col-sm-3 wt-page-options-label">
                    <?= I18N::translate('Presentation') ?>
                </label>
                <div class="col-sm-9 wt-page-options-value">
                    <?=
                        view('components/checkbox', [
                            'id'      => 'hideEmptySegments',
                            'name'    => 'hideEmptySegments',
                            'label'   => I18N::translate('Hide empty segments'),
                            'checked' => $configuration->getHideEmptySegments(),
                        ])
                    ?>

                    <?=
                        view('components/checkbox', [
                            'id'      => 'showColorGradients',
                            'name'    => 'showColorGradients',
                            'label'   => I18N::translate('Show color gradients'),
                            'checked' => $configuration->getShowColorGradients(),
                        ])
                    ?>

                    <?=
                        view('components/checkbox', [
                            'id'      => 'showParentMarriageDates',
                            'name'    => 'showParentMarriageDates',
                            'label'   => I18N::translate('Show parent marriage dates'),
                            'checked' => $configuration->getShowParentMarriageDates(),
                        ])
                    ?>
                </div>
            </div>

            <div class="form-group row">
                <label class="col-sm-3 col-form-label wt-page-options-label" for="innerArcs">
                    <?= I18N::translate('Number of inner levels') ?>
                </label>
                <div class="col-sm-9 wt-page-options-value">
                    <?=
                        view('components/select', [
                            'id'       => 'innerArcs',
                            'name'     => 'innerArcs',
                            'selected' => $configuration->getInnerArcs(),
                            'options'  => $configuration->getInnerArcsList(),
                            'class'    => 'form-control-sm',
                        ])
                    ?>
                    <small class="form-text text-muted">
                        <?= I18N::translate('Specifies the number of levels in which the text is written along an arc.') ?>
                    </small>
                </div>
            </div>

            <div class="form-group row">
                <label class="col-sm-3 col-form-label wt-page-options-label" for="fontScale">
                    <?= I18N::translate('Font size') ?>
                </label>
                <div class="col-sm-9 wt-page-options-value">
                    <div class="input-group input-group-sm">
                        <input class="form-control" type="text" name="fontScale" id="fontScale"
                               maxlength="3" placeholder="100" value="<?= $configuration->getFontScale() ?>">
                        <div class="input-group-append">
                            <span class="input-group-text">%</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-12 wt-page-options-value text-center">
                <div class="btn-toolbar justify-content-between">
                    <div class="btn-group btn-group-sm">
                        <button id="options"
                                class="btn btn-primary"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#showMoreOptions"
                                aria-expanded="false"
                                aria-controls="showMoreOptions">
                            <span><?= I18N::translate('Show more options') ?></span>
                            <span class="d-none"><?= I18N::translate('Hide more options') ?></span>
                        </button>
                    </div>

                    <div class="btn-group btn-group-sm">
                        <input class="btn btn-primary" type="submit" value="<?= I18N::translate('view') ?>">
                    </div>

                    <div class="justify-content-around">
                        <div class="btn-group btn-group-sm mr-2">
                            <button class="btn btn-secondary" type="button" id="centerButton">
                                <?= I18N::translate('Re center') ?>
                            </button>
                        </div>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-secondary border-end" type="button" id="exportPNG">
                                <?= I18N::translate('Export as PNG') ?>
                            </button>
                            <button class="btn btn-secondary border-start" type="button" id="exportSVG">
                                <?= I18N::translate('Export as SVG') ?>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <div class="row">
        <div id="webtrees-fan-chart-container" class="wt-ajax-load wt-page-content wt-chart wt-fan-chart"></div>
    </div>
</div>

<?php View::push('styles') ?>
<link rel="stylesheet" href="<?= e($stylesheet) ?>">
<link rel="stylesheet" href="<?= e($svgStylesheet) ?>">
<?php View::endpush(); ?>

<?php View::push('javascript'); ?>
<script src="<?= e($javascript) ?>"></script>
<script>

/**
 * Load chart data and draws the chart.
 *
 * @param {FanChart} fanChart
 * @param {string}   dataUrl
 */
function drawChart(fanChart, dataUrl)
{
    // Create URL
    let url = new URL(dataUrl);
    url.searchParams.set("xref", document.getElementById("xref").value);
    url.searchParams.set("generations", fanChart.configuration.generations);

    // Fetch data
    fetch(
        url.toString(),
        {
            headers: {
                "Content-Type": "application/json",
            }
        }
    ).then(
        response => response.json()
    ).then(
        data => fanChart.draw(data)
    )
    .catch(
        error => console.error(error)
    );
}

/**
 * Set visibility of "Show more options" to previous state after page reload.
 * Toggle text on "Show more options" on click.
 *
 * @param {Storage} storage
 */
function toggleMoreOptions(storage)
{
    // Options container
    const showMoreOptions = document.getElementById("showMoreOptions");

    // Options toggle button
    const optionsToggle = document.getElementById("options");

    showMoreOptions.addEventListener("shown.bs.collapse", () => {
        storage.write("showMoreOptions", true);
    });

    showMoreOptions.addEventListener("hidden.bs.collapse", () => {
        storage.write("showMoreOptions", false);
    });

    optionsToggle.addEventListener("click", () => {
        Array.from(optionsToggle.children).forEach((element, index) => {
            element.classList.toggle("d-none");
        });
    });

    if (storage.read("showMoreOptions")) {
        optionsToggle.click();
    }
}

// Set up storage object
const storage = new WebtreesFanChart.Storage("webtrees-fan-chart");

// Register all form elements valid for storing data
storage.register("fanDegree");
storage.register("generations");
storage.register("hideEmptySegments");
storage.register("showColorGradients");
storage.register("showParentMarriageDates");
storage.register("innerArcs");
storage.register("fontScale");


// Handle option toggle button
toggleMoreOptions(storage);

// Set initial stored value
document.getElementById("fanDegreeOutput").value = parseInt(storage.read("fanDegree")) + "Â°";

document.getElementById("fanDegree").addEventListener("input", function (event) {
    document.getElementById('fanDegreeOutput').value = document.getElementById("fanDegree").value + "Â°";
});

let data    = <?= $chartParams ?>;
let ajaxUrl = <?= json_encode($ajaxUrl) ?>;
let cssUrl  = <?= json_encode($svgStylesheet) ?>;

// Create chart instance with stored configuration
const fanChart = new WebtreesFanChart.FanChart(
    "#webtrees-fan-chart-container",
    {
        labels: data.labels,
        generations: parseInt(storage.read("generations")),
        fanDegree: parseInt(storage.read("fanDegree")),
        defaultColor: data.defaultColor,
        fontScale: parseInt(storage.read("fontScale")),
        fontColor: data.fontColor,
        hideEmptySegments: storage.read("hideEmptySegments"),
        showColorGradients: storage.read("showColorGradients"),
        showParentMarriageDates: storage.read("showParentMarriageDates"),
        showImages: data.showImages,
        showSilhouettes: data.showSilhouettes,
        rtl: data.rtl,
        innerArcs: parseInt(storage.read("innerArcs"))
    }
);

fanChart.cssFile = cssUrl;

// Load initial chart data
drawChart(fanChart, ajaxUrl);

// Redraw chart upon form submit (enable this to use AJAX only post request, without internal redirect from POST to GET)
// document.getElementById('webtrees-fan-chart-form').addEventListener('submit', function (event) {
//     event.preventDefault();
     // Update configuration with changed form values
//     fanChart.configuration.generations             = parseInt(document.getElementById('generations').value);
//     fanChart.configuration.fanDegree               = parseInt(document.getElementById('fanDegree').value);
//     fanChart.configuration.fontScale               = parseInt(document.getElementById('fontScale').value);
//     fanChart.configuration.hideEmptySegments       = !!document.getElementById('hideEmptySegments').checked;
//     fanChart.configuration.showColorGradients      = !!document.getElementById('showColorGradients').checked;
//     fanChart.configuration.showParentMarriageDates = !!document.getElementById('showParentMarriageDates').checked;
//     fanChart.configuration.numberOfInnerCircles    = parseInt(document.getElementById('innerArcs').value);

//     drawChart(fanChart, ajaxUrl);
// });

</script>
<?php View::endpush(); ?>
